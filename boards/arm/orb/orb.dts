/dts-v1/;
#include <st/g4/stm32g474Xe.dtsi>
#include <st/g4/stm32g474v(b-c-e)tx-pinctrl.dtsi>

/ {
	model = "Worldcoin Orb";
	compatible = "worldcoin,orb";

	chosen {
		zephyr,console = &usart2;
		zephyr,shell-uart = &usart2;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,can-primary = &can1;
	};

    zephyr,user {
        // This is a mux for who controls the audio amp
        // 1 == MCU
        // 0 == Jetson
        sound-amp-mux-gpios = <&gpioe 10 GPIO_ACTIVE_HIGH>;
    };

    vbat_sw {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "12V VBAT SW";
        regulator-name = "12v_vbat_sw";
        enable-gpios = <&gpiof 10 GPIO_ACTIVE_HIGH>;

        // This is attached to a MOSFET to allow the battery
        // power to be sent to the inputs of:
        // * 12v supply
        // * 5v supply
        // * Supercap charger
        //
        // As such, it has no power good pin
    };

    supply_12v {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "12V Supply";
        regulator-name = "supply_12v";
        enable-gpios = <&gpioe 0 GPIO_ACTIVE_HIGH>;

        // Has no power good pin
    };

    supply_5v {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "5V Supply";
        regulator-name = "supply_5v";
        enable-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;

        power_good {
            compatible = "gpio-power-good";
            gpios = <&gpiob 1 GPIO_PULL_UP>;
        };
    };

    supply_3v8 {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "3.8V Supply";
        regulator-name = "supply_3v8";
        enable-gpios = <&gpioe 15 GPIO_ACTIVE_HIGH>;
    };

    supply_3v3 {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "3.3V Supply";
        regulator-name = "supply_3v3";
        enable-gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;

        power_good {
            compatible = "gpio-power-good";
            gpios = <&gpioa 12 GPIO_PULL_UP>;
        };
    };

    supply_1v8 {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "1.8V Supply";
        regulator-name = "supply_1v8";
        enable-gpios = <&gpioe 8 GPIO_ACTIVE_HIGH>;

        power_good {
            compatible = "gpio-power-good";
            gpios = <&gpioe 7 GPIO_PULL_UP>;
        };
    };

    fan {
        compatible = "pwm-fan";
        pwms = <&fan_pwm 3 10000 PWM_POLARITY_NORMAL>;

        // Currently no tachometer reading, only a 2-wire fan
    };

    buttons {
        compatible = "gpio-keys";

        power_button {
            gpios = <&gpioc 13 GPIO_ACTIVE_HIGH>;
            label = "Power button";
        };
    };

    jetson_power_pins {
        compatible = "gpio-jetson-power";
        shutdown_request {
            gpios = <&gpioe 14 GPIO_ACTIVE_LOW>;

            // input
            // Jetson module uses this to request a shutdown sequence
        };

        power_enable {
            gpios = <&gpioe 12 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN)>;

            // output
            // this signals the Jetson module to turn on an off
        };

        system_reset {
            gpios = <&gpioe 11 GPIO_ACTIVE_LOW>;

            // bidirectional
            // drive low to reset
            // driven by Jetson to indicate power sequence is complete
        };

        module_sleep {
            gpios = <&gpiof 2 GPIO_ACTIVE_LOW>;

            // input
            // when driven low indicates that the module has gone to sleep
        };

        sleep_wake {
            gpios = <&gpioe 9 GPIO_ACTIVE_HIGH>;

            // output
            // drive high to indicate that the Jetson should enter sleep mode
        };
    };

    lte_gps_usb_reset {
        compatible = "gpio-lte-gps-usb";
        gpios = <&gpiod 3 GPIO_ACTIVE_LOW>;
    };
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(24)>;
	status = "okay";
};

&pll {
	div-m = <6>;
	mul-n = <85>;
	div-p = <7>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(170)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&usart2 {
	pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
	current-speed = <115200>;
	status = "okay";
};

&rtc {
	status = "okay";
};

&timers2 {
     status = "okay";

    fan_pwm: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch3_pd7>;
    };
};

&i2c1 {
    pinctrl-0 = <&i2c1_scl_pa15 &i2c1_sda_pb9>;
    status = "okay";
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* Set 2Kb of storage at the end of the 128Kb of flash */
		storage_partition: partition@1f800 {
			label = "storage";
			reg = <0x0001f800 0x00000800>;
		};
	};
};
