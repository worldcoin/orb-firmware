/*
 * Copyright (c) 2019 STMicroelectronics.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/g4/stm32g484Xe.dtsi>
#include <st/g4/stm32g484qetx-pinctrl.dtsi>

/ {
	model = "STMicroelectronics STM32G484-EVAL board";
	compatible = "st,stm32g484-eval";

	chosen
	{
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
                zephyr,canbus = &can2;
	};

    zephyr,user {
        // This is a mux for who controls the audio amp
        // 1 == MCU
        // 0 == Jetson
        sound-amp-mux-gpios = <&gpioe 10 GPIO_ACTIVE_HIGH>;
    };

	vbat_sw
	{
		compatible = "regulator-fixed-sync", "regulator-fixed";
		label = "12V VBAT SW";
		regulator-name = "12v_vbat_sw";
		enable-gpios = <&gpiof 10 GPIO_ACTIVE_HIGH>;

		// This is attached to a MOSFET to allow the battery
		// power to be sent to the inputs of:
		// * 12v supply
		// * 5v supply
		// * Supercap charger
		//
		// As such, it has no power good pin
	};

	supply_12v
	{
		compatible = "regulator-fixed-sync", "regulator-fixed";
		label = "12V Supply";
		regulator-name = "supply_12v";
		enable-gpios = <&gpioe 0 GPIO_ACTIVE_HIGH>;

		// Has no power good pin
	};

	supply_5v
	{
		compatible = "regulator-fixed-sync", "regulator-fixed";
		label = "5V Supply";
		regulator-name = "supply_5v";
		enable-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;

		power_good
		{
			compatible = "gpio-power-good";
			gpios = <&gpiob 1 GPIO_PULL_UP>;
		};
	};

    supply_3v8 {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "3.8V Supply";
        regulator-name = "supply_3v8";
        enable-gpios = <&gpioe 15 GPIO_ACTIVE_HIGH>;
    };

	supply_3v3
	{
		compatible = "regulator-fixed-sync", "regulator-fixed";
		label = "3.3V Supply";
		regulator-name = "supply_3v3";
		enable-gpios = <&gpiod 15 GPIO_ACTIVE_HIGH>;

		power_good
		{
			compatible = "gpio-power-good";
			gpios = <&gpioa 12 GPIO_PULL_UP>;
		};
	};

    supply_1v8 {
        compatible = "regulator-fixed-sync", "regulator-fixed";
        label = "1.8V Supply";
        regulator-name = "supply_1v8";
        enable-gpios = <&gpioe 8 GPIO_ACTIVE_HIGH>;

        power_good {
            compatible = "gpio-power-good";
            gpios = <&gpioe 7 GPIO_PULL_UP>;
        };
    };

	fan
	{
		compatible = "pwm-fan";
		pwms = <&pwm2 3 10000 PWM_POLARITY_NORMAL>;

    // Currently no tachometer reading, only a 2-wire fan
    };

	buttons
	{
		compatible = "gpio-keys";

		power_button
		{
			gpios = <&gpioc 13 GPIO_ACTIVE_LOW>;
			label = "Power button";
		};
	};

    jetson_power_pins {
        compatible = "gpio-jetson-power";
        shutdown_request {
            gpios = <&gpioe 14 GPIO_ACTIVE_LOW>;

            // input
            // Jetson module uses this to request a shutdown sequence
        };

        power_enable {
            gpios = <&gpioe 12 (GPIO_ACTIVE_LOW | GPIO_OPEN_DRAIN)>;

            // output
            // this signals the Jetson module to turn on an off
        };

        system_reset {
            gpios = <&gpioe 11 GPIO_ACTIVE_LOW>;

            // bidirectional
            // drive low to reset
            // driven by Jetson to indicate power sequence is complete
        };

        module_sleep {
            gpios = <&gpiof 2 GPIO_ACTIVE_LOW>;

            // input
            // when driven low indicates that the module has gone to sleep
        };

        sleep_wake {
            gpios = <&gpioe 9 GPIO_ACTIVE_HIGH>;

            // output
            // drive high to indicate that the Jetson should enter sleep mode
        };
    };

    lte_gps_usb_reset {
        compatible = "gpio-lte-gps-usb";
        gpios = <&gpiod 3 GPIO_ACTIVE_LOW>;
    };

	soc
	{
		can
		{
		can2:
			can@40006800
			{
				compatible = "st,stm32-fdcan";
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0x40006800 0x400>, <0x4000A750 0x350>;
				reg-names = "m_can", "message_ram";
				interrupts = <86 0>, <87 0>;
				interrupt-names = "LINE_0", "LINE_1";
				status = "disabled";
				label = "CAN_2";
			};

		can3:
			can@40006C00
			{
				compatible = "st,stm32-fdcan";
				#address-cells = <1>;
				#size-cells = <0>;
				reg = <0x40006C00 0x400>, <0x4000AAA0 0x350>;
				reg-names = "m_can", "message_ram";
				interrupts = <88 0>, <89 0>;
				interrupt-names = "LINE_0", "LINE_1";
				status = "disabled";
				label = "CAN_3";
			};
		};
	};
};

&clk_hse
{
	clock-frequency = <DT_FREQ_M(24)>;
	status = "okay";
};

&pll
{
    div-m = <6>;
    mul-n = <85>;
    div-p = <7>;
    div-q = <2>;
    div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc
{
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(170)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&usart1
{
	// Connected on Virtual COM port (STLINK)
	pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
	current-speed = <115200>;
	status = "okay";
};

&i2c1 {
	pinctrl-0 = <&i2c1_scl_pb8 &i2c1_sda_pb9>;
	status = "okay";
};

&timers2
{
	status = "okay";

pwm2:
	pwm
	{
		status = "okay";
		pinctrl-0 = <&tim2_ch3_pb10>;
	};
};

&timers3
{
	status = "okay";
pwm3:
	pwm
	{
		status = "okay";
		st,prescaler = <10000>;
		pinctrl-0 = <&tim3_ch1_pb4>;
	};
};

&rtc
{
	status = "okay";
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/guides/dts/index.html#flash-partitions
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* 48KiB for bootloader */
        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 0x0000C000>;
            read-only;
        };

		/* 224KiB per slot */
		slot0_partition: partition@C000 {
            label = "image-0";
            reg = <0x0000C000 0x00038000>;
        };
        slot1_partition: partition@44000 {
            label = "image-1";
            reg = <0x00044000 0x00038000>;
        };

		/* 8KiB scratch */
        scratch_partition: partition@7C000 {
            label = "image-scratch";
            reg = <0x0007C000 0x00002000>;
        };

        /* final 8KiB reserved for app storage partition */
        storage_partition: partition@7E000 {
            label = "storage";
            reg = <0x0007E000 0x00002000>;
        };
	};
};

&iwdg
{
	status = "okay";
};

&rng
{
	status = "okay";
};

&adc1
{
	pinctrl-0 = <&adc1_in1_pa0>;
	status = "okay";
};

&can1 {
	pinctrl-0 = <&fdcan1_rx_pb8 &fdcan1_tx_pb9>;
	bus-speed = <125000>;
	sjw = <1>;
	sample-point = <875>;
	bus-speed-data = <1000000>;
	sjw-data = <1>;
	sample-point-data = <875>;
	status = "okay";
};

&can2
{
	pinctrl-0 = <&fdcan2_rx_pb5 &fdcan2_tx_pb13>;
	bus-speed = <125000>;
	sjw = <1>;
	sample-point = <875>;
	bus-speed-data = <1000000>;
	sjw-data = <1>;
	sample-point-data = <875>;
	status = "okay";
};
